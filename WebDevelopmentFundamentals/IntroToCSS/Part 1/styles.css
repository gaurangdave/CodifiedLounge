/* CSS Selectors */
/* 
     Universal Selector 
     -- Uncomment to see it in action
*/
/* * {
     color: red;
} */

/*
     Type Selector
     Selects the element with given node name
*/

h1 {
	color: rgb(56, 63, 167);
	background-color: lightgray;
}

/*
     Class Selector
     Selects the element with given class name
*/

.a_button {
	color: rgb(77, 117, 16);
	background-color: lightgray;
}

/*
     ID Selector
     Selects the element with given id
*/

#avengers_assemble {
	color: rgb(19, 18, 18);
	background-color: rgb(238, 75, 75);
	height: 100px;
	width: 200px;
}

/*
     Attribute Selector
     Selects the element with given attribute
     Check browser compatibility : https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors#browser_compatibility
*/

a {
	color: black;
	background-color: lightgray; /* default style */
}

/* <a> elements with an href containing "a[href*="index"] */
a[href*="index"] {
	background-color: aquamarine;
}

a[href="missions.html"] {
	background-color: rgb(167, 245, 144);
}

/* Internal links, beginning with "#" */
a[href^="#"] {
	background-color: gold;
}

/* Links that start with "https" and end in ".org" */
a[href^="https"] {
	background-color: red;
}

a[href^="https"][href$=".org"] {
	background-color: rgb(240, 152, 10);
}

a[class~="certified"] {
	background-color: rgb(0, 255, 13);
	color: black;
}

input[required] {
	color: rgb(3, 3, 3);
	background-color: rgb(191, 209, 218);
}

/*
     selector list
     grouping method that selects all the matching nodes.
*/

p,
span {
	font-weight: bold;
	color: black;
}

.warning {
	background-color: rgb(233, 233, 164);
}
.info {
	background-color: rgb(111, 202, 245);
}

.error {
	background-color: rgb(255, 0, 0);
}

/*
     Descendant combinator
     combines two selectors such that elements matched by the second selector are 
     selected if they have an ancestor (parent, parent's parent, parent's parent's parent, etc) 
     element matching the first selector
*/

ul.iron_man a {
	background-color: gold;
	color: red;
}

ul p {
	font-weight: normal;
}

ul.captain a {
	background-color: #002d5c;
	color: #f0f0f0;
}

/*
     Child combinator
     The > combinator selects nodes that are direct children of the first element. 
*/

ul.iron_man > li {
	list-style-type: none;
}

ul.captain > li {
	list-style-type: none;
}

/* 
ul.iron_man, ul.captain > li {
     list-style-type: none;
} */

/*
general sibling combinator (~) separates two selectors and matches all iterations of the second element,
that are following the first element (though not necessarily immediately), and are children of
*/

input[type="radio"] ~ p {
	visibility: hidden;
}

/*
     pseudo-class 
     keyword added to a selector that specifies a special state of the selected element(s). 
*/

a:hover {
	font-size: 30px;
}

a:visited {
	background-color: black;
}

input[type="text"]:focus {
	background-color: rgb(255, 255, 255);
}

input[type="button"]:active {
	background-color: rgb(255, 255, 255);
}

input[type="radio"]:checked ~ p {
	visibility: visible;
}

/* input[type="radio"]#team_captain:checked ~ p#captain_recruit {
     visibility: visible;
}

input[type="radio"]#team_iron_man:checked ~ p#iron_man_recruit {
     visibility: visible;
} */

input[type="radio"].teams:disabled ~ label {
	text-decoration: line-through;
	/* text-decoration-line: line-through; */
}

/*
pseudo-element is a keyword added to a selector that lets you style a specific part of the selected element(s)
*/

/* The first line of every <p> element. */
.pseudo_element_example p::first-line {
	color: blue;
	text-transform: uppercase;
}


.pseudo_element_example a::after {
     content: "<- Boring";
     color: red;
     font-weight: bold;
}

.pseudo_element_example p::first-letter {
	color: rgb(207, 7, 7);
     font-size: 150%;
}

.pseudo_element_example p::selection {
	color: rgb(252, 2, 2);
     background-color: rgb(17, 17, 17);
     font-size: 3000%;
}


